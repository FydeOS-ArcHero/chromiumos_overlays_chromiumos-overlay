From cf85848a9039b3fa3b7fb158ce596e8e5b744c6d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Toni=20L=C3=B6nnberg?= <toni.lonnberg@intel.com>
Date: Mon, 26 Nov 2018 17:56:32 +0200
Subject: [PATCH] [Decode] Fix partition lengths for MFD_VP8_BSD_OBJECT
 commands.

The original code tries to fix the encoding of the partition length fields too
late as the command has already been written to the command stream. The command
encoding is the same for different gens so the fix can be  implemented in the
generic encoding of the command. This patch fixes some of the GPU hangs when
decoding VP8 streams.

PR - https://github.com/intel/media-driver/pull/430

---
 .../common/hw/vdbox/mhw_vdbox_mfx_generic.h   | 20 +++++++++----------
 .../gen10/hw/vdbox/mhw_vdbox_mfx_g10_X.cpp    |  6 ------
 .../gen8/hw/vdbox/mhw_vdbox_mfx_g8_X.h        |  6 ------
 .../gen9/hw/vdbox/mhw_vdbox_mfx_g9_X.h        |  6 ------
 4 files changed, 10 insertions(+), 28 deletions(-)

diff --git a/media_driver/agnostic/common/hw/vdbox/mhw_vdbox_mfx_generic.h b/media_driver/agnostic/common/hw/vdbox/mhw_vdbox_mfx_generic.h
index e775a9f8..25a1a25f 100644
--- a/media_driver/agnostic/common/hw/vdbox/mhw_vdbox_mfx_generic.h
+++ b/media_driver/agnostic/common/hw/vdbox/mhw_vdbox_mfx_generic.h
@@ -2825,61 +2825,61 @@ class MhwVdboxMfxInterfaceGeneric : public MhwVdboxMfxInterface
         cmd.DW1.Partition0CpbacEntropyCount = vp8PicParams->ucP0EntropyCount;
         cmd.DW2.Partition0CpbacEntropyValue = vp8PicParams->ucP0EntropyValue;
 
-        cmd.DW3.IndirectPartition0DataLength = vp8PicParams->uiPartitionSize[0];
+        cmd.DW3.IndirectPartition0DataLength = vp8PicParams->uiPartitionSize[0] + 1;
         cmd.DW4.IndirectPartition0DataStartOffset = vp8PicParams->uiFirstMbByteOffset;
 
-        cmd.DW5.IndirectPartition1DataLength = vp8PicParams->uiPartitionSize[1];
+        cmd.DW5.IndirectPartition1DataLength = vp8PicParams->uiPartitionSize[1] + 1;
         cmd.DW6.IndirectPartition1DataStartOffset = cmd.DW4.IndirectPartition0DataStartOffset +
-            cmd.DW3.IndirectPartition0DataLength +
+            vp8PicParams->uiPartitionSize[0] +
             (numPartitions - 1) * 3;      // Account for P Sizes: 3 bytes per partition
                                             // excluding partition 0 and last partition.
 
         int32_t i = 2;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW7.IndirectPartition2DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW7.IndirectPartition2DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW8.IndirectPartition2DataStartOffset = cmd.DW6.IndirectPartition1DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 3;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW9.IndirectPartition3DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW9.IndirectPartition3DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW10.IndirectPartition3DataStartOffset = cmd.DW8.IndirectPartition2DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 4;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW11.IndirectPartition4DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW11.IndirectPartition4DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW12.IndirectPartition4DataStartOffset = cmd.DW10.IndirectPartition3DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 5;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW13.IndirectPartition5DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW13.IndirectPartition5DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW14.IndirectPartition5DataStartOffset = cmd.DW12.IndirectPartition4DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 6;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW15.IndirectPartition6DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW15.IndirectPartition6DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW16.IndirectPartition6DataStartOffset = cmd.DW14.IndirectPartition5DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 7;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW17.IndirectPartition7DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW17.IndirectPartition7DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW18.IndirectPartition7DataStartOffset = cmd.DW16.IndirectPartition6DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
         i = 8;
         if (i < ((1 + numPartitions)))
         {
-            cmd.DW19.IndirectPartition8DataLength = vp8PicParams->uiPartitionSize[i];
+            cmd.DW19.IndirectPartition8DataLength = vp8PicParams->uiPartitionSize[i] + 1;
             cmd.DW20.IndirectPartition8DataStartOffset = cmd.DW18.IndirectPartition7DataStartOffset + vp8PicParams->uiPartitionSize[i - 1];
         }
 
diff --git a/media_driver/agnostic/gen10/hw/vdbox/mhw_vdbox_mfx_g10_X.cpp b/media_driver/agnostic/gen10/hw/vdbox/mhw_vdbox_mfx_g10_X.cpp
index 07a551b3..cbfc50ee 100644
--- a/media_driver/agnostic/gen10/hw/vdbox/mhw_vdbox_mfx_g10_X.cpp
+++ b/media_driver/agnostic/gen10/hw/vdbox/mhw_vdbox_mfx_g10_X.cpp
@@ -2535,12 +2535,6 @@ MOS_STATUS MhwVdboxMfxInterfaceG10::AddMfdVp8BsdObjectCmd(
 
     MHW_MI_CHK_STATUS(MhwVdboxMfxInterfaceGeneric::AddMfdVp8BsdObjectCmd(cmdBuffer, params));
 
-    cmd.DW3.IndirectPartition0DataLength += 1;
-    if (cmd.DW3.IndirectPartition0DataLength == 0)
-    {
-        cmd.DW3.IndirectPartition0DataLength -= 1;
-    }
-
     return eStatus;
 }
 
diff --git a/media_driver/agnostic/gen8/hw/vdbox/mhw_vdbox_mfx_g8_X.h b/media_driver/agnostic/gen8/hw/vdbox/mhw_vdbox_mfx_g8_X.h
index 2b41151f..71aae9e2 100644
--- a/media_driver/agnostic/gen8/hw/vdbox/mhw_vdbox_mfx_g8_X.h
+++ b/media_driver/agnostic/gen8/hw/vdbox/mhw_vdbox_mfx_g8_X.h
@@ -1387,12 +1387,6 @@ class MhwVdboxMfxInterfaceG8 : public MhwVdboxMfxInterfaceGeneric<TMfxCmds, mhw_
         eStatus = MhwVdboxMfxInterfaceGeneric<TMfxCmds, mhw_mi_g8_X>::AddMfdVp8BsdObjectCmd(cmdBuffer, params);
         MHW_MI_CHK_STATUS(eStatus);
 
-        cmd.DW3.IndirectPartition0DataLength += 1;
-        if (cmd.DW3.IndirectPartition0DataLength == 0)
-        {
-            cmd.DW3.IndirectPartition0DataLength -= 1;
-        }
-
         return eStatus;
     }
 
diff --git a/media_driver/agnostic/gen9/hw/vdbox/mhw_vdbox_mfx_g9_X.h b/media_driver/agnostic/gen9/hw/vdbox/mhw_vdbox_mfx_g9_X.h
index 396025bf..94e79d9a 100644
--- a/media_driver/agnostic/gen9/hw/vdbox/mhw_vdbox_mfx_g9_X.h
+++ b/media_driver/agnostic/gen9/hw/vdbox/mhw_vdbox_mfx_g9_X.h
@@ -2267,12 +2267,6 @@ class MhwVdboxMfxInterfaceG9 : public MhwVdboxMfxInterfaceGeneric<TMfxCmds, mhw_
         eStatus = MhwVdboxMfxInterfaceGeneric<TMfxCmds, mhw_mi_g9_X>::AddMfdVp8BsdObjectCmd(cmdBuffer, params);
         MHW_MI_CHK_STATUS(eStatus);
 
-        cmd.DW3.IndirectPartition0DataLength += 1;
-        if (cmd.DW3.IndirectPartition0DataLength == 0)
-        {
-            cmd.DW3.IndirectPartition0DataLength -= 1;
-        }
-
         return eStatus;
     }
 
